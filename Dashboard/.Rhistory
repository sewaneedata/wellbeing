geom_col(aes(x = aca_impa, y = total, fill = diener1)) +
facet_wrap(~diener1) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Leading a purposeful and meaningful life',
x = 'Academic Impairment',
y = 'Number of People') +
theme(legend.position = 'none')
ggplot(data = D1_AI) +
geom_col(aes(x = aca_impa, y = total, fill = 'blue')) +
facet_wrap(~diener1) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Leading a purposeful and meaningful life',
x = 'Academic Impairment',
y = 'Number of People') +
theme(legend.position = 'none')
ggplot(data = D1_AI) +
geom_col(aes(x = aca_impa, y = total), fill = 'blue') +
facet_wrap(~diener1) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Leading a purposeful and meaningful life',
x = 'Academic Impairment',
y = 'Number of People') +
theme(legend.position = 'none')
ggplot(data = D1_AI) +
geom_col(aes(x = aca_impa, y = total), fill = 'aquamarine2') +
facet_wrap(~diener1) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Leading a purposeful and meaningful life',
x = 'Academic Impairment',
y = 'Number of People') +
theme(legend.position = 'none')
ggplot(data = D1_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener1) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Leading a purposeful and meaningful life',
x = 'Academic Impairment',
y = 'Number of People') +
theme_grey()
library(ggthemes)
ggplot(data = D1_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener1) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Leading a purposeful and meaningful life',
x = 'Academic Impairment',
y = 'Number of People') +
theme_light()
## Diener2----
D2_AI <- HMS20 %>%
select(diener2, aca_impa) %>%
filter(!is.na(diener2), !is.na(aca_impa)) %>%
group_by(diener2, aca_impa) %>%
summarise(total = n())
HMS20 %>%
View(D2_AI)
View(D2_AI)
### change the facet wrap titles
D2_AI$diener2 <- factor(D2_AI$diener2, levels = c(1,2,3,4,5,6,7),
labels = c('Strongly Disagree', 'Disagree',
'Slightly Disagree','Neutral',
'Slightly Agree', 'Agree', 'Strongly Agree'))
ggplot(data = D2_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener2) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Supportive and rewarding social relationships',
x = 'Academic Impairment',
y = 'Number of People') +
theme_light()
D3_AI <- HMS20 %>%
select(diener3, aca_impa) %>%
filter(!is.na(diener3), !is.na(aca_impa)) %>%
group_by(diener3, aca_impa) %>%
summarise(total = n())
### change the facet wrap titles
D3_AI$diener3 <- factor(D3_AI$diener3, levels = c(1,2,3,4,5,6,7),
labels = c('Strongly Disagree', 'Disagree',
'Slightly Disagree','Neutral',
'Slightly Agree', 'Agree', 'Strongly Agree'))
View(D3_AI)
ggplot(data = D3_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener3) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Engaged and interested in daily activities',
x = 'Academic Impairment',
y = 'Number of People') +
theme_light()
D4_AI <- HMS20 %>%
select(diener4, aca_impa) %>%
filter(!is.na(diener4), !is.na(aca_impa)) %>%
group_by(diener4, aca_impa) %>%
summarise(total = n())
### change the facet wrap titles
D4_AI$diener4 <- factor(D4_AI$diener4, levels = c(1,2,3,4,5,6,7),
labels = c('Strongly Disagree', 'Disagree',
'Slightly Disagree','Neutral',
'Slightly Agree', 'Agree', 'Strongly Agree'))
ggplot(data = D4_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener4) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Actively contribute to the happiness and well-being
of others.',
x = 'Academic Impairment',
y = 'Number of People') +
theme_light()
ggplot(data = D4_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener4) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Actively contribute to the happiness and well-being of others',
x = 'Academic Impairment',
y = 'Number of People') +
theme_light()
D5_AI <- HMS20 %>%
select(diener5, aca_impa) %>%
filter(!is.na(diener5), !is.na(aca_impa)) %>%
group_by(diener5, aca_impa) %>%
summarise(total = n())
### change the facet wrap titles
D5_AI$diener5 <- factor(D5_AI$diener5, levels = c(1,2,3,4,5,6,7),
labels = c('Strongly Disagree', 'Disagree',
'Slightly Disagree','Neutral',
'Slightly Agree', 'Agree', 'Strongly Agree'))
View(D5_AI)
ggplot(data = D5_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener5) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'competent and capable in the activities that are important to me',
x = 'Academic Impairment',
y = 'Number of People') +
theme_light()
ggplot(data = D5_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener5) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Competent and capable in important personal activities',
x = 'Academic Impairment',
y = 'Number of People') +
theme_light()
D6_AI <- HMS20 %>%
select(diener6, aca_impa) %>%
filter(!is.na(diener6), !is.na(aca_impa)) %>%
group_by(diener6, aca_impa) %>%
summarise(total = n())
D7_AI <- HMS20 %>%
select(diener7, aca_impa) %>%
filter(!is.na(diener7), !is.na(aca_impa)) %>%
group_by(diener7, aca_impa) %>%
summarise(total = n())
### change the facet wrap titles
D7_AI$diener7 <- factor(D7_AI$diener7, levels = c(1,2,3,4,5,6,7),
labels = c('Strongly Disagree', 'Disagree',
'Slightly Disagree','Neutral',
'Slightly Agree', 'Agree', 'Strongly Agree'))
ggplot(data = D7_AI) +
geom_col(aes(x = aca_impa, y = total)) +
facet_wrap(~diener7) +
labs(title = 'Academic impairment and Positive Mental Health',
subtitle = 'Competent and capable in important personal activities',
x = 'Academic Impairment',
y = 'Number of People') +
theme_light()
names(HMS20)
source("C:/Users/sndea/OneDrive/Documents/DataLab2022/wellbeing/merged.R")
library(plotly)
# academic impairment and positive mental health
pmh_ai <- combined %>%
select(diener_score, aca_impa, schoolYear) %>%
group_by(diener_score, aca_impa, schoolYear) %>%
tally()
pmh_ai_plot <- ggplot(data = pmh_ai %>% drop_na(aca_impa), aes(x = aca_impa, y = diener_score, fill = aca_impa))+
geom_jitter() +
geom_violin(alpha = 0.5) +
theme(legend.position = 'none') +
labs(title = 'academic impairment and positive mental health',
subtitle = 'In the past 4 weeks, how many days have you felt that emotional or mental difficulties have hurt your academic performance?',
caption = 'Well-Being Dream Team',
x = 'academic impairment',
y = 'positive mental health score') +
facet_wrap(~schoolYear)
# for each academic impairment do s box or violin plot
ggplotly(pmh_ai_plot)
source("C:/Users/sndea/OneDrive/Documents/DataLab2022/wellbeing/merged.R")
library(tidyverse)
library(data.table)
# Reading in CSV files
hms17 <- read_csv("./HMS17.csv")
hms18 <- read_csv("./HMS18.csv")
hms19 <- read_csv("./HMS19.csv")
hms20 <- read_csv("./HMS20_better.csv")
#################################################
# ROWS THAT DON'T HAVE A RESPONSE ID 2017/18 ----
#################################################
# Filter by NA responseid
# toMelt17 <- as.data.table(hms17 %>% filter(is.na(responseid)))
# Combine every column into three
# melted17 <- data.table::melt(toMelt17, id.vars = "responseid", measure.vars = 2:523)
# Filter by only non-NA values
# melted17 %>% filter(!is.na(value))
#################################################
# ROWS THAT DON'T HAVE A RESPONSE ID 2018/19 ----
#################################################
# Filter by NA responseid
# toMelt18 <- as.data.table(hms18 %>% filter(is.na(responseid)))
# Combine every column into three
# melted18 <- data.table::melt(toMelt18, id.vars = "responseid", measure.vars = 2:659)
# Filter by only non-NA values
# melted18 %>% filter(!is.na(value))
#################################################
# ROWS THAT DON'T HAVE A RESPONSE ID 2019/20 ----
#################################################
# Filter by NA responseid
# toMelt19 <- as.data.table(hms19 %>% filter(is.na(responseid)))
# Combine every column into three
# melted19 <- data.table::melt(toMelt19, id.vars = "responseid", measure.vars = 2:643)
# Filter by only non-NA values
# melted19 %>% filter(!is.na(value))
#################################################
# ROWS THAT DON'T HAVE A RESPONSE ID 2020/21 ----
#################################################
# Filter by NA responseid
# toMelt20 <- as.data.table(hms20 %>% filter(is.na(responseid)))
# Combine every column into three
# melted20 <- data.table::melt(toMelt20, id.vars = "responseid", measure.vars = 2:1068)
# Filter by only non-NA values
# melted20 %>% filter(!is.na(value))
############################
# FILTERING HMS 2017/18 ----
############################
# Getting just the response IDs for future use
ids17 <- hms17 %>%
select(responseid)
# Merging the field columns (losing data from those with no fields entered)
major17 <- hms17 %>%
select(responseid, field_hum:field_other) %>%
pivot_longer(!responseid) %>%
drop_na(value) %>%
group_by(responseid) %>%
summarise(major = paste0(name, collapse = ', '))
# Adding back the people with no field selected
major17 <- ids17 %>% left_join(major17, by = "responseid")
############################
# FILTERING HMS 2018/19 ----
############################
# Getting just the response IDs for future use
ids18 <- hms18 %>%
select(responseid)
# Merging the field columns (losing data from those with no fields entered)
major18 <- hms18 %>%
select(responseid, field_hum:field_other) %>%
pivot_longer(!responseid) %>%
drop_na(value) %>%
group_by(responseid) %>%
summarise(major = paste0(name, collapse = ', '))
# Adding back the people with no field selected
major18 <- ids18 %>% left_join(major18, by = "responseid")
###########################
# FILTERING HMS 2019/20----
###########################
ids19 <- hms19 %>%
select(responseid)
# Merging the field columns (losing data from those with no fields entered)
major19 <- hms19 %>%
select(responseid, field_hum:field_other) %>%
pivot_longer(!responseid) %>%
drop_na(value) %>%
group_by(responseid) %>%
summarise(major = paste0(name, collapse = ', '))
# Adding back the people with no field selected
major19 <- ids19 %>% left_join(major19, by = "responseid")
############################
# FILTERING HMS 2020/21 ----
############################
# Getting just the response IDs for future use
ids20 <- hms20 %>%
select(responseid)
# Merging the field columns (losing data from those with no fields entered)
major20 <- hms20 %>%
select(responseid, field_hum:field_other) %>%
pivot_longer(!responseid) %>%
drop_na(value) %>%
group_by(responseid) %>%
summarise(major = paste0(name, collapse = ', '))
# Adding back the people with no field selected
major20 <- ids20 %>% left_join(major20, by = "responseid")
# Categories to select by:
cats <- c("schoolYear",
"classYear",
"age",
"diener1",
"diener2",
"diener3",
"diener4",
"diener5",
"diener6",
"diener7",
"diener8",
"diener_score",
"dx_dep",
# "dx_bip",
"dx_anx",
# "dx_ocd",
"dx_trauma",
"dx_neurodev",
"dx_ea",
# "dx_other",
"dx_none",
"dx_dk",
"aca_impa",
"talk1_1",
"talk1_2",
"talk1_3",
"talk1_4",
"talk1_5",
"talk1_6",
"talk1_7",
"talk1_8",
"talk1_8_text",
"talk1_9",
"ther_ever"
# "gad7_1",
# "gad7_2",
# "gad7_3",
# "gad7_4",
# "gad7_5",
# "gad7_6",
# "gad7_7",
# "gad7_impa"
# "phq9_1",
# "phq9_2",
# "phq9_3",
# "phq9_4",
# "phq9_5",
# "phq9_6",
# "phq9_7",
# "phq9_8",
# "phq9_9",
# "phq9_impa",
# "phq2_1",
# "phq2_2"
)
# Selecting only the columns we want
hms17 <- hms17 %>%
left_join(major17, by = "responseid") %>%
mutate(schoolYear = "17/18") %>%
rename(classYear = yr_sch) %>%
select(cats) %>%
mutate(age = as.character(age))
hms18 <- hms18 %>%
left_join(major18, by = "responseid") %>%
mutate(schoolYear = "18/19") %>%
rename(classYear = yr_sch) %>%
select(cats) %>%
mutate(age = as.character(age))
hms19 <- hms19 %>%
left_join(major19, by = "responseid") %>%
mutate(schoolYear = "19/20") %>%
rename(classYear = yr_sch) %>%
select(cats) %>%
mutate(age = as.character(age))
hms20 <- hms20 %>%
left_join(major20, by = "responseid") %>%
distinct(responseid, .keep_all = TRUE) %>%
mutate(schoolYear = "20/21") %>%
rename(classYear = yr_sch) %>%
select(cats) %>%
mutate(age = as.character(age))
# Merging the data by the columns
combined <- bind_rows(hms17, hms18, hms19, hms20)
shiny::runApp('DataLab2022/examplehmsdashboard')
runApp('DataLab2022/examplehmsdashboard')
runApp('DataLab2022/examplehmsdashboard')
runApp('DataLab2022/examplehmsdashboard')
runApp('DataLab2022/examplehmsdashboard')
runApp('DataLab2022/examplehmsdashboard')
setwd("~/DataLab2022/HMS data")
source("C:/Users/sndea/OneDrive/Documents/DataLab2022/wellbeing/merged.R")
setwd("~/DataLab2022/wellbeing")
source("C:/Users/sndea/OneDrive/Documents/DataLab2022/wellbeing/merged.R")
setwd("~/DataLab2022/HMS data")
source("C:/Users/sndea/OneDrive/Documents/DataLab2022/wellbeing/merged.R")
?box
runApp('~/DataLab2022/examplehmsdashboard')
library(ggplot2)
library(ggthemes)
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
pmh_ai <- combined %>%
select(diener_score, aca_impa, schoolYear) %>%
group_by(diener_score, aca_impa, schoolYear) %>%
tally()
pmh_ai$aca_impa <- factor(pmh_ai$aca_impa, levels = c(1, 2, 3, 4),
labels = c("None", "1-2 Days",
"3-5 Days", "6 or more Days"))
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
?width
??width
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
View(combined)
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
?box
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
View(combined)
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
count <- combined %>%
group_by(schoolYear) %>%
tally()
count
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp()
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
runApp('~/DataLab2022/examplehmsdashboard')
library(readr)
HMS20_better <- read_csv("HMS20_better.csv")
View(HMS20_better)
HMS20_better$SubstanceUse
runApp('~/DataLab2022/examplehmsdashboard')
HMS <- read_csv("../../HMSAll.csv")
library(readr)
HMS <- read_csv("../../HMSAll.csv")
setwd("~/DataLab2022/HMS data/wellbeing")
HMS <- read_csv("../../HMSAll.csv")
setwd("~/DataLab2022/HMS data")
HMS <- read_csv("../../HMSAll.csv")
HMS <- read_csv("../../HMSAll.csv")
setwd("~/DataLab2022/HMS data/wellbeing/Dashboard")
HMS <- read_csv("../../HMSAll.csv")
shiny::runApp('~/DataLab2022/HMS data/wellbeing - Copy/Dashboard')
runApp('~/DataLab2022/HMS data/wellbeing - Copy/Dashboard')
setwd("~/DataLab2022/HMS data/wellbeing - Copy/Dashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?box
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/DataLab2022/HMS data/wellbeing/Dashboard')
setwd("~/DataLab2022/HMS data/wellbeing/Dashboard")
runApp()
